plugins {
    id 'java'
    id 'maven-publish'
    id 'com.github.johnrengelman.shadow' version '8.0.0'
}

publishing {
    repositories {
        mavenLocal()
    }

    publications {
        maven(MavenPublication) {
            from components.java
        }
    }
}
group = 'de.obey.crown.core'
version = '1.0.0'

repositories {
    mavenCentral()
    mavenLocal()
    maven { url "https://repo.extendedclip.com/content/repositories/placeholderapi/" }

    maven { url "https://jitpack.io" }

    maven { url "https://repo.papermc.io/repository/maven-public/" }


    maven {url 'https://repo.xyrisdev.com/repository/maven-public'}
}

dependencies {
    implementation 'com.xyrisdev:scheduler:1.0'

    compileOnly "io.papermc.paper:paper-api:1.21.4-R0.1-SNAPSHOT"

    compileOnly("org.projectlombok:lombok:1.18.32")
    annotationProcessor("org.projectlombok:lombok:1.18.32")

    compileOnly("me.clip:placeholderapi:2.11.6")
    compileOnly("com.github.MilkBowl:VaultAPI:1.7")
}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

shadowJar {
    relocate 'com.xyrisdev.library', 'de.obey.crown.core.shaded.scheduler'
}

tasks.build {
    dependsOn shadowJar
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}

jar {
    // Set the name of the jar file
    archiveFileName = "CrownCore-Folia.jar"

    // Optionally, you can include the version in the name:
    // archiveFileName = "my-custom-jar-name-${version}.jar"
}